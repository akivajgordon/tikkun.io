{
  "version": 3,
  "sources": ["../src/infinite-scroller.js", "../src/integer-iterator.js", "../src/hebrew-numeral.js", "../src/text-filter.js", "../src/display-range.js", "../src/title.js", "../src/location.js", "../src/fuzzy.js", "../src/event-emitter.js", "../src/index.js", "../components/Line.js", "../components/Page.js", "../components/ParshaPicker.js", "../components/ParshaPicker.js", "../components/utils.js", "../components/ParshaResult.js", "../components/ParshaPicker.js", "../components/ParshaPicker.js", "../components/SelectList.js", "../components/SelectList.js", "../components/SelectList.js", "../components/Search.js", "../index.js", "../index.js"],
  "sourcesContent": ["let alreadyInFlight = false\nconst oneAtATime = (promise) => {\n  if (alreadyInFlight) return Promise.resolve()\n  alreadyInFlight = true\n  return promise()\n    .then((val) => {\n      alreadyInFlight = false\n      return val\n    })\n}\n\nconst InfiniteScroller = {\n  new: ({ container, fetchPreviousContent, fetchNextContent }) => ({\n    attach: () => container.addEventListener('scroll', (e) => {\n      const scrollView = e.target\n\n      const hiddenAboveHeight = scrollView.scrollTop\n      const height = scrollView.clientHeight\n\n      const hiddenBelowHeight = scrollView.scrollHeight - (scrollView.clientHeight + scrollView.scrollTop)\n\n      if (hiddenAboveHeight < 0.5 * height) {\n        oneAtATime(() => fetchPreviousContent.fetch())\n          .then(fetched => {\n            if (!fetched) return\n\n            const belowHeight = scrollView.scrollHeight - scrollView.scrollTop\n\n            fetchPreviousContent.render(fetched)\n\n            scrollView.scrollTop = scrollView.scrollHeight - belowHeight\n          })\n      } else if (hiddenBelowHeight < 0.5 * height) {\n        oneAtATime(() => fetchNextContent.fetch())\n          .then(fetched => {\n            if (fetched) fetchNextContent.render(fetched)\n          })\n      }\n    })\n  })\n}\n\nmodule.exports = InfiniteScroller\n", "module.exports = {\n  new: ({ startingAt }) => {\n    let previousCount = 0\n    let nextCount = 0\n\n    return {\n      previous: () => {\n        previousCount += 1\n        return startingAt - previousCount\n      },\n      next: () => {\n        nextCount += 1\n        return startingAt + nextCount - 1\n      }\n    }\n  }\n}\n", "const letters = [\n    {glyph: '\u05D0', value: 1},\n    {glyph: '\u05D1', value: 2},\n    {glyph: '\u05D2', value: 3},\n    {glyph: '\u05D3', value: 4},\n    {glyph: '\u05D4', value: 5},\n    {glyph: '\u05D5', value: 6},\n    {glyph: '\u05D6', value: 7},\n    {glyph: '\u05D7', value: 8},\n    {glyph: '\u05D8', value: 9},\n    {glyph: '\u05D9', value: 10},\n    {glyph: '\u05DB', value: 20},\n    {glyph: '\u05DC', value: 30},\n    {glyph: '\u05DE', value: 40},\n    {glyph: '\u05E0', value: 50},\n    {glyph: '\u05E1', value: 60},\n    {glyph: '\u05E2', value: 70},\n    {glyph: '\u05E4', value: 80},\n    {glyph: '\u05E6', value: 90},\n    {glyph: '\u05E7', value: 100},\n    {glyph: '\u05E8', value: 200},\n    {glyph: '\u05E9', value: 300},\n    {glyph: '\u05EA', value: 400}\n]\n  .reverse()\n\nconst hebrewNumeral = (n) => {\n  if (n <= 0) return ''\n  if (n === 15) return '\u05D8\u05D5'\n  if (n === 16) return '\u05D8\u05D6'\n\n  let i = 0\n  while (n < letters[i].value) {\n    ++i\n  }\n\n  const letter = letters[i]\n\n  return `${letter.glyph}${hebrewNumeral(n - letter.value)}`\n}\n\nmodule.exports = hebrewNumeral\n", "const NUN_HAFUCHA = '\u05C6'\n\nconst ketiv = (text) => text\n  .replace('#(\u05E4)', '')\n  .replace(`#(${NUN_HAFUCHA})`, ` ${NUN_HAFUCHA}`)\n  .split(' ')\n  .map((maqafSeparatedWord) => maqafSeparatedWord\n    .split('\u05BE')\n    .map(word => {\n      const parts = word.split('#')\n\n      if (parts.length <= 1) {\n        // i.e. there is no `#`, so just take the word\n        return parts[0]\n      }\n\n      return `{${parts\n        .slice(1)\n        .map(bracketed => bracketed.slice(1, -1))\n        .join(' ')}}`\n    })\n    .join('\u05BE')\n  )\n  .join(' ')\n\nconst kri = (text) => text\n  .replace(/\u05BE/g, ' ')\n  .replace('#(\u05E4)', '')\n  .replace(`#(${NUN_HAFUCHA})`, ` ${NUN_HAFUCHA}`)\n  .split(' ')\n  .map((word) => {\n    const parts = word.split('#')\n\n    return parts[0]\n  })\n  .join(' ')\n  .replace(new RegExp(`[^\u05D0-\u05EA\\\\s${NUN_HAFUCHA}]`, 'g'), '')\n\nmodule.exports = ({ text, annotated }) => annotated ? ketiv(text) : kri(text)\n", "const hebrewNumeralFromInteger = require('./hebrew-numeral')\nconst parshiyot = require('../build/parshiyot.json')\n\nvar asRange = (strings) => {\n  if (!strings.length) {\n    return ''\n  }\n\n  if (strings.length === 1) {\n    return strings[0]\n  }\n\n  return [strings[0], strings[strings.length - 1]].join('-')\n}\n\nconst aliyotStrings = [\n  '\u05E8\u05D0\u05E9\u05D5\u05DF',\n  '\u05E9\u05E0\u05D9',\n  '\u05E9\u05DC\u05D9\u05E9\u05D9',\n  '\u05E8\u05D1\u05D9\u05E2\u05D9',\n  '\u05D7\u05DE\u05D9\u05E9\u05D9',\n  '\u05E9\u05E9\u05D9',\n  '\u05E9\u05D1\u05D9\u05E2\u05D9',\n  '\u05DE\u05E4\u05D8\u05D9\u05E8'\n]\n\nconst parshaName = (verses) => parshiyot\n  .find(({ ref }) => verses\n    .some(({ book: b, chapter: c, verse: v }) => ref.b === b && ref.c === c && ref.v === v\n    )\n  ).he\n\nconst aliyotNames = (aliyot, verses) => aliyot\n  .filter((aliyah) => aliyah > 0 && aliyah <= aliyotStrings.length)\n  .map((aliyah) => aliyotStrings[aliyah - 1])\n  .map(aliyah => {\n    if (aliyah === '\u05E8\u05D0\u05E9\u05D5\u05DF') {\n      return parshaName(verses)\n    }\n\n    return aliyah\n  })\n\nconst asVersesRange = (verses) => asRange(verses.map((verse) => {\n  const components = []\n\n  if (verse.verse === 1) {\n    components.push(verse.chapter)\n  }\n\n  components.push(verse.verse)\n\n  return components\n    .map((num) => hebrewNumeralFromInteger(num))\n    .join(':')\n}))\n\nconst asAliyotRange = (aliyot, verses) => {\n  if (!aliyot.length) {\n    return ''\n  }\n\n  const aliyotByName = aliyotNames(aliyot, verses)\n\n  return aliyotByName[0] + (aliyotByName[1] ? ` [${aliyotByName[1]}]` : '')\n}\n\nmodule.exports = { asVersesRange, asAliyotRange }\n", "module.exports = (parshiyot) => {\n  return parshiyot.join(' \u2013 ')\n}\n", "const toc = require('../build/table-of-contents.json')\nconst estherToc = require('../build/table-of-contents-esther.json')\n\nmodule.exports = ({ ref: { b: book, c: chapter, v: verse }, scroll }) => {\n  const { p: pageNumber, l: lineNumber } = (scroll === 'torah' ? toc : estherToc)[book][chapter][verse]\n\n  return { pageNumber, lineNumber }\n}\n", "const hasEveryCharacterInOrder = needle => item => (new RegExp(needle\n  .split('')\n  .join('.*')\n, 'i')).test(item)\n\nconst matchIndexes = (needle, match) => {\n  const needleChars = needle.split('')\n  const matchChars = match.split('')\n\n  const indexes = []\n  let needleIndex = 0\n\n  for (let i = 0; i < matchChars.length; i++) {\n    if (needleChars[needleIndex].toLowerCase() === matchChars[i].toLowerCase()) {\n      indexes.push(i)\n      ++needleIndex\n\n      if (needleIndex >= needleChars.length) break\n    }\n  }\n\n  return indexes\n}\n\nconst indexScore = (needle, match) => {\n  const indexes = matchIndexes(needle, match)\n\n  return indexes\n    .map(index => index - indexes[0])\n    .reduce((a, b) => a + b, 0)\n}\n\nconst bestMatch = (needle, getSearchTerms) => candidate => {\n  const { minScore, index } = getSearchTerms(candidate)\n    .map(term => hasEveryCharacterInOrder(needle)(term) ? indexScore(needle, term) : Infinity)\n    .reduce(({ minScore, index }, score, i) => {\n      if (score < minScore) return { minScore: score, index: i }\n\n      return { minScore, index }\n    }, { minScore: Infinity, index: 0 })\n\n  if (!isFinite(minScore)) return { score: minScore }\n\n  return {\n    score: minScore,\n    item: candidate,\n    match: { index, indexes: matchIndexes(needle, getSearchTerms(candidate)[index]) }\n  }\n}\n\nmodule.exports = (haystack, needle, getSearchTerms = x => [x]) => haystack\n  .map(bestMatch(needle, getSearchTerms))\n  .filter(({ score }) => isFinite(score))\n  .sort((match, other) => {\n    const matchScore = match.score\n    const otherScore = other.score\n\n    const scoreDiff = matchScore - otherScore\n\n    if (scoreDiff === 0) {\n      return match.match.indexes[0] - other.match.indexes[0]\n    }\n\n    return scoreDiff\n  })\n", "export default {\n  new: () => {\n    const listeners = []\n\n    return {\n      emit: (evt, payload) => {\n        listeners\n          .filter(listener => listener.evt === evt)\n          .forEach(listener => {\n            listener.callback(payload)\n          })\n      },\n      on: (evt, callback) => {\n        listeners.push({ evt, callback })\n      }\n    }\n  }\n}\n", "import InfiniteScroller from './infinite-scroller'\nimport IntegerIterator from './integer-iterator'\nconst hebrewNumeralFromInteger = require('./hebrew-numeral')\nconst textFilter = require('./text-filter')\nconst displayRange = require('./display-range')\nconst title = require('./title')\nconst physicalLocationFromRef = require('./location')\n\nexport { textFilter, hebrewNumeralFromInteger, displayRange, InfiniteScroller, IntegerIterator, title, physicalLocationFromRef }\n", "import { displayRange, textFilter } from '../src'\n\nconst ktivKriAnnotation = text => text.replace(/[{]/g, `<span class=\"ktiv-kri\">`).replace(/[}]/g, `</span>`)\n\nconst petuchaClass = (isPetucha) => isPetucha ? 'mod-petucha' : ''\nconst setumaClass = (column) => column.length > 1 ? 'mod-setuma' : ''\nconst shiraClass = (text) => text.length === 3 ? 'mod-shira' : ''\n\nconst Line = ({ text, verses, aliyot, isPetucha }) => `\n  <div class=\"line ${petuchaClass(isPetucha)} ${shiraClass(text)}\">\n    ${text.map((column) => (`\n      <div class=\"column\">\n        ${column.map((fragment) => (`\n          <span class=\"fragment ${setumaClass(column)} mod-annotations-on\">${ktivKriAnnotation(textFilter({ text: fragment, annotated: true }))}</span>\n          <span class=\"fragment ${setumaClass(column)} mod-annotations-off\">${ktivKriAnnotation(textFilter({ text: fragment, annotated: false }))}</span>\n        `)).join('')}\n      </div>\n    `)).join('')}\n    <span class=\"location-indicator mod-verses\">${displayRange.asVersesRange(verses)}</span>\n    <span class=\"location-indicator mod-aliyot\" data-target-id=\"aliyot-range\">${displayRange.asAliyotRange(aliyot, verses)}</span>\n  </div>\n`\n\nexport default Line\n", "import Line from './Line'\n\nconst Page = (lines) => `\n  <table>\n    ${lines.map((line) => (`\n      <tr>\n        <td>${Line(line)}</td>\n      </tr>\n    `)).join('')}\n  </table>\n`\n\nexport default Page\n", "/* global gtag */\n\nimport parshiyot from '../build/parshiyot.json'\nimport readingSchedule from '../build/schedule.json'\nimport fuzzy from '../src/fuzzy'\nimport utils from './utils'\nimport ParshaResult, { NoResults } from './ParshaResult'\n\nconst { htmlToElement } = utils\n\nconst Parsha = ({ ref, he, scroll }) => `\n  <li\n    class=\"parsha\"\n    data-target-id=\"parsha\"\n    data-jump-to-book=\"${ref.b}\"\n    data-jump-to-chapter=\"${ref.c}\"\n    data-jump-to-verse=\"${ref.v}\"\n    data-scroll=\"${scroll}\"\n  >\n    ${he}\n  </li>\n  `\n\nconst Book = (book) => `\n  <li class=\"parsha-book\">\n    <ol class=\"parsha-list\">\n      ${book.map(b => Parsha({ ...b, scroll: 'torah' })).join('')}\n    </ol>\n  </li>\n`\n\nconst refFromLabel = ({ label }) => parshiyot\n  .find(({ he }) => label.startsWith(he))\n  .ref\n\nconst ComingUpReading = ({ label, date, datetime }) => {\n  const { b: book, c: chapter, v: verse } = refFromLabel({ label })\n  return `\n  <li style=\"display: table-cell; width: calc(100% / 3); padding: 0 0.5em;\">\n    <div class=\"stack small\" style=\"display: flex; flex-direction: column; align-items: center;\">\n      <button\n        data-target-class=\"coming-up-reading\"\n        data-jump-to-book=\"${book}\"\n        data-jump-to-chapter=\"${chapter}\"\n        data-jump-to-verse=\"${verse}\"\n        data-scroll=\"torah\"\n        class=\"coming-up-button\"\n      >${label}</button>\n      <time class=\"coming-up-date\" datetime=\"${datetime}\">${date}</time>\n    </div>\n  </li>\n  `\n}\n\nconst comingUpReadings = readingSchedule\n  .filter(reading => new Date(reading.datetime) > new Date())\n  .slice(0, 3)\n\nconst ComingUp = () => `\n  <section dir=\"ltr\" id=\"coming-up\" class=\"section mod-alternate mod-padding\">\n    <div class=\"stack medium\">\n      <label class=\"section-label\">Coming up</label>\n      <div style=\"overflow-x: auto;\">\n        <ol class=\"cluster\" style=\"list-style: none; display: table; margin-left: auto; margin-right: auto; white-space: nowrap;\">\n          ${comingUpReadings\n            .map(ComingUpReading)\n            .join('')\n          }\n        </ol>\n      </div>\n    </div>\n  </section>\n`\n\nconst Browse = () => `\n  <div class=\"browse\">\n    <h2 class=\"section-heading\">\u05EA\u05D5\u05E8\u05D4</h2>\n    <ol class=\"parsha-books\">\n      ${parshiyot\n        .reduce((books, parsha) => {\n          const book = parsha.ref.b\n          books[book] = books[book] || []\n          books[book].push(parsha)\n          return books\n        }, [])\n        .map(Book)\n        .join('')\n      }\n    </ol>\n\n    <h2 class=\"section-heading\">\u05DE\u05D2\u05D9\u05DC\u05D5\u05EA</h2>\n    <ol class=\"parsha-books\">\n      <li class=\"parsha-book\">\n        <ol class=\"parsha-list\">\n          ${Parsha({ ref: { b: 1, c: 1, v: 1 }, he: '\u05D0\u05E1\u05EA\u05E8', scroll: 'esther' })}\n        </ol>\n      </li>\n    </ol>\n  </div>\n`\n\nconst ParshaPicker = (search, searchEmitter, jumpToRef) => {\n  const self = htmlToElement(`\n    <div class=\"parsha-picker\">\n      <div class=\"stack xlarge\">\n        <div class=\"centerize\">\n          <div id=\"search\" style=\"display: inline-block;\"></div>\n        </div>\n        ${ComingUp()}\n        ${Browse()}\n      </div>\n    </div>\n  `)\n\n  searchEmitter.on('selection', (selected) => {\n    gtag('event', 'search_selection', {\n      event_category: 'navigation',\n      event_label: selected.querySelector('[data-target-class=\"result-hebrew\"]').textContent.trim()\n    })\n\n    const result = selected.querySelector('[data-target-class=\"parsha-result\"]')\n\n    jumpToRef({ ref: result, scroll: result.getAttribute('data-scroll') })\n  })\n\n  searchEmitter.on('search', query => {\n    self.querySelector('.browse').classList.add('u-hidden')\n    self.querySelector('#coming-up').classList.add('u-hidden')\n    gtag('event', 'search', {\n      event_category: 'navigation',\n      event_label: query\n    })\n  })\n\n  searchEmitter.on('clear', () => {\n    self.querySelector('.browse').classList.remove('u-hidden')\n    self.querySelector('#coming-up').classList.remove('u-hidden')\n  })\n\n  self.querySelector('#search').parentNode.replaceChild(search, self.querySelector('#search'))\n\n  ;[...self.querySelectorAll('[data-target-id=\"parsha\"]')]\n    .forEach((parsha) => {\n      parsha.addEventListener('click', (e) => {\n        gtag('event', 'browse_selection', {\n          event_category: 'navigation',\n          event_label: e.target.textContent.trim()\n        })\n        jumpToRef({ ref: e.target, scroll: e.target.getAttribute('data-scroll') })\n      })\n    })\n\n  ;[...self.querySelectorAll('[data-target-class=\"coming-up-reading\"]')]\n    .forEach(comingUpReading => {\n      comingUpReading.addEventListener('click', e => {\n        gtag('event', 'coming_up_selection', {\n          event_category: 'navigation',\n          event_label: e.target.textContent.trim()\n        })\n\n        jumpToRef({ ref: e.target, scroll: e.target.getAttribute('data-scroll') })\n      })\n    })\n\n  return self\n}\n\nconst searchables = [\n  ...parshiyot.map(p => ({ ...p, scroll: 'torah' })),\n  {\n    he: '\u05D0\u05E1\u05EA\u05E8',\n    en: 'Esther',\n    ref: { b: 1, c: 1, v: 1 },\n    scroll: 'esther'\n  }\n]\n\nconst searchResults = (query) => {\n  const results = fuzzy(searchables, query, parsha => [parsha.he, parsha.en])\n\n  return results.length ? results : [{\n    item: 'No results',\n    match: { index: 0, indexes: [] }\n  }]\n}\n\nconst top = (n) => (_, i) => i < n\n\nconst search = query => searchResults(query)\n  .filter(top(5))\n  .map(result => result.item === 'No results'\n    ? NoResults()\n    : ParshaResult(result)\n  )\n\nexport { search }\n\nexport default ParshaPicker\n", "/* global gtag */\n\nimport parshiyot from '../build/parshiyot.json'\nimport readingSchedule from '../build/schedule.json'\nimport fuzzy from '../src/fuzzy'\nimport utils from './utils'\nimport ParshaResult, { NoResults } from './ParshaResult'\n\nconst { htmlToElement } = utils\n\nconst Parsha = ({ ref, he, scroll }) => `\n  <li\n    class=\"parsha\"\n    data-target-id=\"parsha\"\n    data-jump-to-book=\"${ref.b}\"\n    data-jump-to-chapter=\"${ref.c}\"\n    data-jump-to-verse=\"${ref.v}\"\n    data-scroll=\"${scroll}\"\n  >\n    ${he}\n  </li>\n  `\n\nconst Book = (book) => `\n  <li class=\"parsha-book\">\n    <ol class=\"parsha-list\">\n      ${book.map(b => Parsha({ ...b, scroll: 'torah' })).join('')}\n    </ol>\n  </li>\n`\n\nconst refFromLabel = ({ label }) => parshiyot\n  .find(({ he }) => label.startsWith(he))\n  .ref\n\nconst ComingUpReading = ({ label, date, datetime }) => {\n  const { b: book, c: chapter, v: verse } = refFromLabel({ label })\n  return `\n  <li style=\"display: table-cell; width: calc(100% / 3); padding: 0 0.5em;\">\n    <div class=\"stack small\" style=\"display: flex; flex-direction: column; align-items: center;\">\n      <button\n        data-target-class=\"coming-up-reading\"\n        data-jump-to-book=\"${book}\"\n        data-jump-to-chapter=\"${chapter}\"\n        data-jump-to-verse=\"${verse}\"\n        data-scroll=\"torah\"\n        class=\"coming-up-button\"\n      >${label}</button>\n      <time class=\"coming-up-date\" datetime=\"${datetime}\">${date}</time>\n    </div>\n  </li>\n  `\n}\n\nconst comingUpReadings = readingSchedule\n  .filter(reading => new Date(reading.datetime) > new Date())\n  .slice(0, 3)\n\nconst ComingUp = () => `\n  <section dir=\"ltr\" id=\"coming-up\" class=\"section mod-alternate mod-padding\">\n    <div class=\"stack medium\">\n      <label class=\"section-label\">Coming up</label>\n      <div style=\"overflow-x: auto;\">\n        <ol class=\"cluster\" style=\"list-style: none; display: table; margin-left: auto; margin-right: auto; white-space: nowrap;\">\n          ${comingUpReadings\n            .map(ComingUpReading)\n            .join('')\n          }\n        </ol>\n      </div>\n    </div>\n  </section>\n`\n\nconst Browse = () => `\n  <div class=\"browse\">\n    <h2 class=\"section-heading\">\u05EA\u05D5\u05E8\u05D4</h2>\n    <ol class=\"parsha-books\">\n      ${parshiyot\n        .reduce((books, parsha) => {\n          const book = parsha.ref.b\n          books[book] = books[book] || []\n          books[book].push(parsha)\n          return books\n        }, [])\n        .map(Book)\n        .join('')\n      }\n    </ol>\n\n    <h2 class=\"section-heading\">\u05DE\u05D2\u05D9\u05DC\u05D5\u05EA</h2>\n    <ol class=\"parsha-books\">\n      <li class=\"parsha-book\">\n        <ol class=\"parsha-list\">\n          ${Parsha({ ref: { b: 1, c: 1, v: 1 }, he: '\u05D0\u05E1\u05EA\u05E8', scroll: 'esther' })}\n        </ol>\n      </li>\n    </ol>\n  </div>\n`\n\nconst ParshaPicker = (search, searchEmitter, jumpToRef) => {\n  const self = htmlToElement(`\n    <div class=\"parsha-picker\">\n      <div class=\"stack xlarge\">\n        <div class=\"centerize\">\n          <div id=\"search\" style=\"display: inline-block;\"></div>\n        </div>\n        ${ComingUp()}\n        ${Browse()}\n      </div>\n    </div>\n  `)\n\n  searchEmitter.on('selection', (selected) => {\n    gtag('event', 'search_selection', {\n      event_category: 'navigation',\n      event_label: selected.querySelector('[data-target-class=\"result-hebrew\"]').textContent.trim()\n    })\n\n    const result = selected.querySelector('[data-target-class=\"parsha-result\"]')\n\n    jumpToRef({ ref: result, scroll: result.getAttribute('data-scroll') })\n  })\n\n  searchEmitter.on('search', query => {\n    self.querySelector('.browse').classList.add('u-hidden')\n    self.querySelector('#coming-up').classList.add('u-hidden')\n    gtag('event', 'search', {\n      event_category: 'navigation',\n      event_label: query\n    })\n  })\n\n  searchEmitter.on('clear', () => {\n    self.querySelector('.browse').classList.remove('u-hidden')\n    self.querySelector('#coming-up').classList.remove('u-hidden')\n  })\n\n  self.querySelector('#search').parentNode.replaceChild(search, self.querySelector('#search'))\n\n  ;[...self.querySelectorAll('[data-target-id=\"parsha\"]')]\n    .forEach((parsha) => {\n      parsha.addEventListener('click', (e) => {\n        gtag('event', 'browse_selection', {\n          event_category: 'navigation',\n          event_label: e.target.textContent.trim()\n        })\n        jumpToRef({ ref: e.target, scroll: e.target.getAttribute('data-scroll') })\n      })\n    })\n\n  ;[...self.querySelectorAll('[data-target-class=\"coming-up-reading\"]')]\n    .forEach(comingUpReading => {\n      comingUpReading.addEventListener('click', e => {\n        gtag('event', 'coming_up_selection', {\n          event_category: 'navigation',\n          event_label: e.target.textContent.trim()\n        })\n\n        jumpToRef({ ref: e.target, scroll: e.target.getAttribute('data-scroll') })\n      })\n    })\n\n  return self\n}\n\nconst searchables = [\n  ...parshiyot.map(p => ({ ...p, scroll: 'torah' })),\n  {\n    he: '\u05D0\u05E1\u05EA\u05E8',\n    en: 'Esther',\n    ref: { b: 1, c: 1, v: 1 },\n    scroll: 'esther'\n  }\n]\n\nconst searchResults = (query) => {\n  const results = fuzzy(searchables, query, parsha => [parsha.he, parsha.en])\n\n  return results.length ? results : [{\n    item: 'No results',\n    match: { index: 0, indexes: [] }\n  }]\n}\n\nconst top = (n) => (_, i) => i < n\n\nconst search = query => searchResults(query)\n  .filter(top(5))\n  .map(result => result.item === 'No results'\n    ? NoResults()\n    : ParshaResult(result)\n  )\n\nexport { search }\n\nexport default ParshaPicker\n", "const htmlToElement = (html) => {\n  const template = document.createElement('template')\n  html = html.trim() // Never return a text node of whitespace as the result\n  template.innerHTML = html\n  return template.content.firstChild\n}\n\nconst getKeys = (key) => {\n  if (typeof key === 'string') return { key, ctrl: false }\n\n  return key\n}\n\nconst whenKey = (key, callback) => e => {\n  const { key: k, ctrl } = getKeys(key)\n\n  if (e.ctrlKey === ctrl && e.key === k && !e.repeat) callback(e)\n}\n\nconst purgeNode = (node) => {\n  while (node.firstChild) node.removeChild(node.firstChild)\n}\n\nexport default {\n  htmlToElement,\n  whenKey,\n  purgeNode\n}\n", "import utils from './utils'\n\nconst { htmlToElement } = utils\n\nconst decorateString = ({ string, atIndexes, withDecoration }) => {\n  let indexesIndex = 0\n  return string\n    .split('')\n    .map((char, i) => {\n      if (atIndexes[indexesIndex] !== i) return char\n\n      ++indexesIndex\n      return withDecoration(char)\n    }, '')\n    .join('')\n}\n\nconst strongify = (c) => (`<strong>${c}</strong>`)\n\nconst ParshaResult = ({ match, item }) => htmlToElement(`\n  <div data-target-class=\"parsha-result\" data-jump-to-book=\"${item.ref.b}\" data-jump-to-chapter=\"${item.ref.c}\" data-jump-to-verse=\"${item.ref.v}\" data-scroll=\"${item.scroll}\">\n    <p class=\"search-result-tag\" data-target-class=\"result-hebrew\">${match.index === 0 ? decorateString({\n      string: item.he,\n      atIndexes: match.indexes,\n      withDecoration: strongify\n    }) : item.he}\n    </p>\n    <p class=\"search-result-tag\">${match.index === 1 ? decorateString({\n      string: item.en,\n      atIndexes: match.indexes,\n      withDecoration: strongify\n    }) : item.en}\n    </p>\n  </div>\n`)\n\nexport default ParshaResult\n\nconst NoResults = () => htmlToElement(`<p class=\"\" style=\"text-align: center; color: var(--light-text-color);\">\n  No results\n</p>\n`)\n\nexport { NoResults }\n", "/* global gtag */\n\nimport parshiyot from '../build/parshiyot.json'\nimport readingSchedule from '../build/schedule.json'\nimport fuzzy from '../src/fuzzy'\nimport utils from './utils'\nimport ParshaResult, { NoResults } from './ParshaResult'\n\nconst { htmlToElement } = utils\n\nconst Parsha = ({ ref, he, scroll }) => `\n  <li\n    class=\"parsha\"\n    data-target-id=\"parsha\"\n    data-jump-to-book=\"${ref.b}\"\n    data-jump-to-chapter=\"${ref.c}\"\n    data-jump-to-verse=\"${ref.v}\"\n    data-scroll=\"${scroll}\"\n  >\n    ${he}\n  </li>\n  `\n\nconst Book = (book) => `\n  <li class=\"parsha-book\">\n    <ol class=\"parsha-list\">\n      ${book.map(b => Parsha({ ...b, scroll: 'torah' })).join('')}\n    </ol>\n  </li>\n`\n\nconst refFromLabel = ({ label }) => parshiyot\n  .find(({ he }) => label.startsWith(he))\n  .ref\n\nconst ComingUpReading = ({ label, date, datetime }) => {\n  const { b: book, c: chapter, v: verse } = refFromLabel({ label })\n  return `\n  <li style=\"display: table-cell; width: calc(100% / 3); padding: 0 0.5em;\">\n    <div class=\"stack small\" style=\"display: flex; flex-direction: column; align-items: center;\">\n      <button\n        data-target-class=\"coming-up-reading\"\n        data-jump-to-book=\"${book}\"\n        data-jump-to-chapter=\"${chapter}\"\n        data-jump-to-verse=\"${verse}\"\n        data-scroll=\"torah\"\n        class=\"coming-up-button\"\n      >${label}</button>\n      <time class=\"coming-up-date\" datetime=\"${datetime}\">${date}</time>\n    </div>\n  </li>\n  `\n}\n\nconst comingUpReadings = readingSchedule\n  .filter(reading => new Date(reading.datetime) > new Date())\n  .slice(0, 3)\n\nconst ComingUp = () => `\n  <section dir=\"ltr\" id=\"coming-up\" class=\"section mod-alternate mod-padding\">\n    <div class=\"stack medium\">\n      <label class=\"section-label\">Coming up</label>\n      <div style=\"overflow-x: auto;\">\n        <ol class=\"cluster\" style=\"list-style: none; display: table; margin-left: auto; margin-right: auto; white-space: nowrap;\">\n          ${comingUpReadings\n            .map(ComingUpReading)\n            .join('')\n          }\n        </ol>\n      </div>\n    </div>\n  </section>\n`\n\nconst Browse = () => `\n  <div class=\"browse\">\n    <h2 class=\"section-heading\">\u05EA\u05D5\u05E8\u05D4</h2>\n    <ol class=\"parsha-books\">\n      ${parshiyot\n        .reduce((books, parsha) => {\n          const book = parsha.ref.b\n          books[book] = books[book] || []\n          books[book].push(parsha)\n          return books\n        }, [])\n        .map(Book)\n        .join('')\n      }\n    </ol>\n\n    <h2 class=\"section-heading\">\u05DE\u05D2\u05D9\u05DC\u05D5\u05EA</h2>\n    <ol class=\"parsha-books\">\n      <li class=\"parsha-book\">\n        <ol class=\"parsha-list\">\n          ${Parsha({ ref: { b: 1, c: 1, v: 1 }, he: '\u05D0\u05E1\u05EA\u05E8', scroll: 'esther' })}\n        </ol>\n      </li>\n    </ol>\n  </div>\n`\n\nconst ParshaPicker = (search, searchEmitter, jumpToRef) => {\n  const self = htmlToElement(`\n    <div class=\"parsha-picker\">\n      <div class=\"stack xlarge\">\n        <div class=\"centerize\">\n          <div id=\"search\" style=\"display: inline-block;\"></div>\n        </div>\n        ${ComingUp()}\n        ${Browse()}\n      </div>\n    </div>\n  `)\n\n  searchEmitter.on('selection', (selected) => {\n    gtag('event', 'search_selection', {\n      event_category: 'navigation',\n      event_label: selected.querySelector('[data-target-class=\"result-hebrew\"]').textContent.trim()\n    })\n\n    const result = selected.querySelector('[data-target-class=\"parsha-result\"]')\n\n    jumpToRef({ ref: result, scroll: result.getAttribute('data-scroll') })\n  })\n\n  searchEmitter.on('search', query => {\n    self.querySelector('.browse').classList.add('u-hidden')\n    self.querySelector('#coming-up').classList.add('u-hidden')\n    gtag('event', 'search', {\n      event_category: 'navigation',\n      event_label: query\n    })\n  })\n\n  searchEmitter.on('clear', () => {\n    self.querySelector('.browse').classList.remove('u-hidden')\n    self.querySelector('#coming-up').classList.remove('u-hidden')\n  })\n\n  self.querySelector('#search').parentNode.replaceChild(search, self.querySelector('#search'))\n\n  ;[...self.querySelectorAll('[data-target-id=\"parsha\"]')]\n    .forEach((parsha) => {\n      parsha.addEventListener('click', (e) => {\n        gtag('event', 'browse_selection', {\n          event_category: 'navigation',\n          event_label: e.target.textContent.trim()\n        })\n        jumpToRef({ ref: e.target, scroll: e.target.getAttribute('data-scroll') })\n      })\n    })\n\n  ;[...self.querySelectorAll('[data-target-class=\"coming-up-reading\"]')]\n    .forEach(comingUpReading => {\n      comingUpReading.addEventListener('click', e => {\n        gtag('event', 'coming_up_selection', {\n          event_category: 'navigation',\n          event_label: e.target.textContent.trim()\n        })\n\n        jumpToRef({ ref: e.target, scroll: e.target.getAttribute('data-scroll') })\n      })\n    })\n\n  return self\n}\n\nconst searchables = [\n  ...parshiyot.map(p => ({ ...p, scroll: 'torah' })),\n  {\n    he: '\u05D0\u05E1\u05EA\u05E8',\n    en: 'Esther',\n    ref: { b: 1, c: 1, v: 1 },\n    scroll: 'esther'\n  }\n]\n\nconst searchResults = (query) => {\n  const results = fuzzy(searchables, query, parsha => [parsha.he, parsha.en])\n\n  return results.length ? results : [{\n    item: 'No results',\n    match: { index: 0, indexes: [] }\n  }]\n}\n\nconst top = (n) => (_, i) => i < n\n\nconst search = query => searchResults(query)\n  .filter(top(5))\n  .map(result => result.item === 'No results'\n    ? NoResults()\n    : ParshaResult(result)\n  )\n\nexport { search }\n\nexport default ParshaPicker\n", "/* global gtag */\n\nimport parshiyot from '../build/parshiyot.json'\nimport readingSchedule from '../build/schedule.json'\nimport fuzzy from '../src/fuzzy'\nimport utils from './utils'\nimport ParshaResult, { NoResults } from './ParshaResult'\n\nconst { htmlToElement } = utils\n\nconst Parsha = ({ ref, he, scroll }) => `\n  <li\n    class=\"parsha\"\n    data-target-id=\"parsha\"\n    data-jump-to-book=\"${ref.b}\"\n    data-jump-to-chapter=\"${ref.c}\"\n    data-jump-to-verse=\"${ref.v}\"\n    data-scroll=\"${scroll}\"\n  >\n    ${he}\n  </li>\n  `\n\nconst Book = (book) => `\n  <li class=\"parsha-book\">\n    <ol class=\"parsha-list\">\n      ${book.map(b => Parsha({ ...b, scroll: 'torah' })).join('')}\n    </ol>\n  </li>\n`\n\nconst refFromLabel = ({ label }) => parshiyot\n  .find(({ he }) => label.startsWith(he))\n  .ref\n\nconst ComingUpReading = ({ label, date, datetime }) => {\n  const { b: book, c: chapter, v: verse } = refFromLabel({ label })\n  return `\n  <li style=\"display: table-cell; width: calc(100% / 3); padding: 0 0.5em;\">\n    <div class=\"stack small\" style=\"display: flex; flex-direction: column; align-items: center;\">\n      <button\n        data-target-class=\"coming-up-reading\"\n        data-jump-to-book=\"${book}\"\n        data-jump-to-chapter=\"${chapter}\"\n        data-jump-to-verse=\"${verse}\"\n        data-scroll=\"torah\"\n        class=\"coming-up-button\"\n      >${label}</button>\n      <time class=\"coming-up-date\" datetime=\"${datetime}\">${date}</time>\n    </div>\n  </li>\n  `\n}\n\nconst comingUpReadings = readingSchedule\n  .filter(reading => new Date(reading.datetime) > new Date())\n  .slice(0, 3)\n\nconst ComingUp = () => `\n  <section dir=\"ltr\" id=\"coming-up\" class=\"section mod-alternate mod-padding\">\n    <div class=\"stack medium\">\n      <label class=\"section-label\">Coming up</label>\n      <div style=\"overflow-x: auto;\">\n        <ol class=\"cluster\" style=\"list-style: none; display: table; margin-left: auto; margin-right: auto; white-space: nowrap;\">\n          ${comingUpReadings\n            .map(ComingUpReading)\n            .join('')\n          }\n        </ol>\n      </div>\n    </div>\n  </section>\n`\n\nconst Browse = () => `\n  <div class=\"browse\">\n    <h2 class=\"section-heading\">\u05EA\u05D5\u05E8\u05D4</h2>\n    <ol class=\"parsha-books\">\n      ${parshiyot\n        .reduce((books, parsha) => {\n          const book = parsha.ref.b\n          books[book] = books[book] || []\n          books[book].push(parsha)\n          return books\n        }, [])\n        .map(Book)\n        .join('')\n      }\n    </ol>\n\n    <h2 class=\"section-heading\">\u05DE\u05D2\u05D9\u05DC\u05D5\u05EA</h2>\n    <ol class=\"parsha-books\">\n      <li class=\"parsha-book\">\n        <ol class=\"parsha-list\">\n          ${Parsha({ ref: { b: 1, c: 1, v: 1 }, he: '\u05D0\u05E1\u05EA\u05E8', scroll: 'esther' })}\n        </ol>\n      </li>\n    </ol>\n  </div>\n`\n\nconst ParshaPicker = (search, searchEmitter, jumpToRef) => {\n  const self = htmlToElement(`\n    <div class=\"parsha-picker\">\n      <div class=\"stack xlarge\">\n        <div class=\"centerize\">\n          <div id=\"search\" style=\"display: inline-block;\"></div>\n        </div>\n        ${ComingUp()}\n        ${Browse()}\n      </div>\n    </div>\n  `)\n\n  searchEmitter.on('selection', (selected) => {\n    gtag('event', 'search_selection', {\n      event_category: 'navigation',\n      event_label: selected.querySelector('[data-target-class=\"result-hebrew\"]').textContent.trim()\n    })\n\n    const result = selected.querySelector('[data-target-class=\"parsha-result\"]')\n\n    jumpToRef({ ref: result, scroll: result.getAttribute('data-scroll') })\n  })\n\n  searchEmitter.on('search', query => {\n    self.querySelector('.browse').classList.add('u-hidden')\n    self.querySelector('#coming-up').classList.add('u-hidden')\n    gtag('event', 'search', {\n      event_category: 'navigation',\n      event_label: query\n    })\n  })\n\n  searchEmitter.on('clear', () => {\n    self.querySelector('.browse').classList.remove('u-hidden')\n    self.querySelector('#coming-up').classList.remove('u-hidden')\n  })\n\n  self.querySelector('#search').parentNode.replaceChild(search, self.querySelector('#search'))\n\n  ;[...self.querySelectorAll('[data-target-id=\"parsha\"]')]\n    .forEach((parsha) => {\n      parsha.addEventListener('click', (e) => {\n        gtag('event', 'browse_selection', {\n          event_category: 'navigation',\n          event_label: e.target.textContent.trim()\n        })\n        jumpToRef({ ref: e.target, scroll: e.target.getAttribute('data-scroll') })\n      })\n    })\n\n  ;[...self.querySelectorAll('[data-target-class=\"coming-up-reading\"]')]\n    .forEach(comingUpReading => {\n      comingUpReading.addEventListener('click', e => {\n        gtag('event', 'coming_up_selection', {\n          event_category: 'navigation',\n          event_label: e.target.textContent.trim()\n        })\n\n        jumpToRef({ ref: e.target, scroll: e.target.getAttribute('data-scroll') })\n      })\n    })\n\n  return self\n}\n\nconst searchables = [\n  ...parshiyot.map(p => ({ ...p, scroll: 'torah' })),\n  {\n    he: '\u05D0\u05E1\u05EA\u05E8',\n    en: 'Esther',\n    ref: { b: 1, c: 1, v: 1 },\n    scroll: 'esther'\n  }\n]\n\nconst searchResults = (query) => {\n  const results = fuzzy(searchables, query, parsha => [parsha.he, parsha.en])\n\n  return results.length ? results : [{\n    item: 'No results',\n    match: { index: 0, indexes: [] }\n  }]\n}\n\nconst top = (n) => (_, i) => i < n\n\nconst search = query => searchResults(query)\n  .filter(top(5))\n  .map(result => result.item === 'No results'\n    ? NoResults()\n    : ParshaResult(result)\n  )\n\nexport { search }\n\nexport default ParshaPicker\n", "import utils from './utils'\n\nconst { htmlToElement } = utils\n\nconst setSelected = (list, adjustSelected) => {\n  const items = [...list.querySelectorAll('[data-target-class=\"list-item\"]')]\n\n  const selectedIndex = Math.max(items.findIndex(item => item.getAttribute('data-selected') === 'true'), 0)\n\n  const selected = items[selectedIndex]\n\n  selected.removeAttribute('data-selected')\n\n  const nextIndex = (adjustSelected(selectedIndex) + items.length) % items.length\n\n  items[nextIndex].setAttribute('data-selected', 'true')\n}\n\nexport { setSelected }\n\nconst getSelected = (list) => list.querySelector('[data-target-class=\"list-item\"][data-selected=\"true\"]')\n\nexport { getSelected }\n\nconst SelectList = (items, el, onSelect) => {\n  const list = htmlToElement(`\n    <ol class=\"list\"></ol>\n  `)\n\n  items.forEach(item => {\n    const listItem = htmlToElement('<li class=\"list-item\" data-target-class=\"list-item\"></li>')\n    listItem.appendChild(item)\n    listItem.addEventListener('click', () => {\n      onSelect(listItem)\n    })\n    list.appendChild(listItem)\n  })\n\n  list\n    .querySelector('[data-target-class=\"list-item\"]')\n    .setAttribute('data-selected', 'true')\n\n  return list\n}\n\nexport default SelectList\n", "import utils from './utils'\n\nconst { htmlToElement } = utils\n\nconst setSelected = (list, adjustSelected) => {\n  const items = [...list.querySelectorAll('[data-target-class=\"list-item\"]')]\n\n  const selectedIndex = Math.max(items.findIndex(item => item.getAttribute('data-selected') === 'true'), 0)\n\n  const selected = items[selectedIndex]\n\n  selected.removeAttribute('data-selected')\n\n  const nextIndex = (adjustSelected(selectedIndex) + items.length) % items.length\n\n  items[nextIndex].setAttribute('data-selected', 'true')\n}\n\nexport { setSelected }\n\nconst getSelected = (list) => list.querySelector('[data-target-class=\"list-item\"][data-selected=\"true\"]')\n\nexport { getSelected }\n\nconst SelectList = (items, el, onSelect) => {\n  const list = htmlToElement(`\n    <ol class=\"list\"></ol>\n  `)\n\n  items.forEach(item => {\n    const listItem = htmlToElement('<li class=\"list-item\" data-target-class=\"list-item\"></li>')\n    listItem.appendChild(item)\n    listItem.addEventListener('click', () => {\n      onSelect(listItem)\n    })\n    list.appendChild(listItem)\n  })\n\n  list\n    .querySelector('[data-target-class=\"list-item\"]')\n    .setAttribute('data-selected', 'true')\n\n  return list\n}\n\nexport default SelectList\n", "import utils from './utils'\n\nconst { htmlToElement } = utils\n\nconst setSelected = (list, adjustSelected) => {\n  const items = [...list.querySelectorAll('[data-target-class=\"list-item\"]')]\n\n  const selectedIndex = Math.max(items.findIndex(item => item.getAttribute('data-selected') === 'true'), 0)\n\n  const selected = items[selectedIndex]\n\n  selected.removeAttribute('data-selected')\n\n  const nextIndex = (adjustSelected(selectedIndex) + items.length) % items.length\n\n  items[nextIndex].setAttribute('data-selected', 'true')\n}\n\nexport { setSelected }\n\nconst getSelected = (list) => list.querySelector('[data-target-class=\"list-item\"][data-selected=\"true\"]')\n\nexport { getSelected }\n\nconst SelectList = (items, el, onSelect) => {\n  const list = htmlToElement(`\n    <ol class=\"list\"></ol>\n  `)\n\n  items.forEach(item => {\n    const listItem = htmlToElement('<li class=\"list-item\" data-target-class=\"list-item\"></li>')\n    listItem.appendChild(item)\n    listItem.addEventListener('click', () => {\n      onSelect(listItem)\n    })\n    list.appendChild(listItem)\n  })\n\n  list\n    .querySelector('[data-target-class=\"list-item\"]')\n    .setAttribute('data-selected', 'true')\n\n  return list\n}\n\nexport default SelectList\n", "import utils from './utils'\nimport SelectList, { setSelected, getSelected } from './SelectList'\n\nconst { htmlToElement: html, whenKey, purgeNode } = utils\n\nconst Search = ({ search, emitter }) => {\n  let list\n\n  const self = html(`\n    <div class=\"search\">\n      <div class=\"search-bar\">\n        <span class=\"search-icon\">\u26B2</span>\n        <input class=\"search-input\" placeholder=\"Search...\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" autofocus />\n      </div>\n      <div class=\"search-results u-hidden\">\n      </div>\n    </div>\n  `)\n\n  self.addEventListener('keydown', whenKey('Enter', () => {\n    emitter.emit('selection', getSelected(list))\n  }))\n\n  const onSelect = item => emitter.emit('selection', item)\n\n  ;[\n    { key: 'ArrowDown', adjustment: selected => selected + 1 },\n    { key: 'ArrowUp', adjustment: selected => selected - 1 },\n    { key: { key: 'n', ctrl: true }, adjustment: selected => selected + 1 },\n    { key: { key: 'p', ctrl: true }, adjustment: selected => selected - 1 }\n  ].forEach(({ key, adjustment }) => self.addEventListener('keydown', whenKey(key, e => {\n    e.preventDefault()\n    setSelected(list, adjustment)\n  })))\n\n  const searchInput = self.querySelector('.search-input')\n  const searchResults = self.querySelector('.search-results')\n\n  searchInput.addEventListener('input', (e) => {\n    const query = e.target.value\n\n    purgeNode(searchResults)\n\n    if (query) {\n      emitter.emit('search', query)\n      const results = search(query)\n      list = SelectList(results, searchInput, onSelect)\n\n      searchResults.appendChild(list)\n      searchResults.classList.remove('u-hidden')\n    } else {\n      emitter.emit('clear')\n      searchResults.classList.add('u-hidden')\n    }\n  })\n\n  self.focus = () => {\n    searchInput.focus()\n  }\n\n  return self\n}\n\nexport default Search\n", "/* global gtag */\n\nimport EventEmitter from './src/event-emitter'\nimport { InfiniteScroller, IntegerIterator, title as getTitle, physicalLocationFromRef } from './src'\nimport Page from './components/Page'\nimport ParshaPicker, { search } from './components/ParshaPicker'\nimport Search from './components/Search'\nimport utils from './components/utils'\nimport pageTitles from './build/page-titles.json'\n\nconst { htmlToElement, whenKey, purgeNode } = utils\n\nconst insertBefore = (parent, child) => {\n  parent.insertAdjacentElement('afterbegin', child)\n}\n\nconst insertAfter = (parent, child) => {\n  parent.insertAdjacentElement('beforeend', child)\n}\n\nlet isShowingParshaPicker = false\n\nlet scroll\n\nconst renderTitle = ({ title }) => {\n  document.querySelector('[data-target-id=\"parsha-title\"]').innerHTML = title\n}\n\nconst makePageNode = ({ title }) => {\n  const node = document.createElement('div')\n  node.classList.add('tikkun-page')\n  node.setAttribute('data-page-title', title)\n\n  return node\n}\n\nconst scrollToLine = ({ node, lineIndex }) => {\n  const lines = [...node.querySelectorAll('.line')]\n\n  const line = lines[lineIndex]\n\n  const book = document.querySelector('.tikkun-book')\n\n  book.scrollTop = line.offsetTop + (line.offsetHeight / 2) - (book.offsetHeight / 2)\n}\n\nconst app = {\n  jumpTo: ({ ref, scroll: _scroll }) => {\n    scroll = (_scroll === 'esther' ? EstherScroll : TorahScroll).new({ startingAtRef: ref })\n\n    purgeNode(document.querySelector('[data-target-id=\"tikkun-book\"]'))\n\n    scroll.fetchNext()\n      .then(renderNext)\n      .then((pageNode) => {\n        scrollToLine({ node: pageNode, lineIndex: scroll.startingLineNumber - 1 })\n      })\n\n    hideParshaPicker()\n\n    return Promise.resolve()\n  }\n}\n\nconst refOf = element => {\n  const refPart = (part) => Number(element.getAttribute(`data-jump-to-${part}`))\n\n  return { b: refPart('book'), c: refPart('chapter'), v: refPart('verse') }\n}\n\nconst setVisibility = ({ selector, visible }) => {\n  const classList = document.querySelector(selector).classList\n\n  classList[visible ? 'remove' : 'add']('u-hidden')\n  classList[visible ? 'remove' : 'add']('mod-animated')\n}\n\nconst showParshaPicker = () => {\n  ;[\n    { selector: '[data-test-id=\"annotations-toggle\"]', visible: false },\n    { selector: '[data-target-id=\"repo-link\"]', visible: false },\n    { selector: '[data-target-id=\"tikkun-book\"]', visible: false }\n  ]\n    .forEach(({ selector, visible }) => setVisibility({ selector, visible }))\n\n  const searchEmitter = EventEmitter.new()\n\n  const s = Search({ search, emitter: searchEmitter })\n  const jumper = ParshaPicker(s, searchEmitter, ({ ref, scroll }) => app.jumpTo({ ref: refOf(ref), scroll }))\n  document.querySelector('#js-app').appendChild(jumper)\n  gtag('event', 'view', {\n    event_category: 'navigation'\n  })\n\n  setTimeout(() => s.focus(), 0)\n}\n\nconst hideParshaPicker = () => {\n  ;[\n    { selector: '[data-test-id=\"annotations-toggle\"]', visible: true },\n    { selector: '[data-target-id=\"repo-link\"]', visible: true },\n    { selector: '[data-target-id=\"tikkun-book\"]', visible: true }\n  ]\n    .forEach(({ selector, visible }) => setVisibility({ selector, visible }))\n\n  document.querySelector('.parsha-picker') && document.querySelector('#js-app').removeChild(document.querySelector('.parsha-picker'))\n}\n\nconst toggleParshaPicker = () => {\n  const isShowingParshaPicker = Boolean(document.querySelector('.parsha-picker'))\n\n  if (isShowingParshaPicker) {\n    hideParshaPicker()\n  } else {\n    showParshaPicker()\n  }\n}\n\nconst toggleAnnotations = (getPreviousCheckedState) => {\n  const toggle = document.querySelector('[data-target-id=\"annotations-toggle\"]')\n\n  toggle.checked = !getPreviousCheckedState()\n\n  const book = document.querySelector('[data-target-id=tikkun-book]')\n\n  book.classList.toggle('mod-annotations-on', toggle.checked)\n  book.classList.toggle('mod-annotations-off', !toggle.checked)\n}\n\nconst scrollState = {\n  lastScrolledPosition: 0,\n  pageAtTop: null\n}\n\nconst resumeLastScrollPosition = () => {\n  if (!scrollState.pageAtTop) return\n  const book = document.querySelector('.tikkun-book')\n  const pageRect = scrollState.pageAtTop.getBoundingClientRect()\n\n  book.scrollTop = scrollState.pageAtTop.offsetTop + (scrollState.lastScrolledPosition * pageRect.height)\n}\n\nconst rememberLastScrolledPosition = () => {\n  const book = document.querySelector('.tikkun-book')\n  const bookBoundingRect = book.getBoundingClientRect()\n\n  const topOfBookRelativeToViewport = {\n    x: bookBoundingRect.left + (bookBoundingRect.width / 2),\n    y: bookBoundingRect.top\n  }\n\n  const pageAtTop = [...document.elementsFromPoint(topOfBookRelativeToViewport.x, topOfBookRelativeToViewport.y)]\n    .find(el => el.className.includes('tikkun-page'))\n\n  if (!pageAtTop) return\n\n  scrollState.pageAtTop = pageAtTop\n  scrollState.lastScrolledPosition = (book.scrollTop - pageAtTop.offsetTop) / pageAtTop.clientHeight\n}\n\nconst updatePageTitle = () => {\n  const bookBoundingRect = document.querySelector('.tikkun-book').getBoundingClientRect()\n\n  const centerOfBookRelativeToViewport = {\n    x: bookBoundingRect.left + (bookBoundingRect.width / 2),\n    y: bookBoundingRect.top + (bookBoundingRect.height / 2)\n  }\n\n  const pageAtCenter = [...document.elementsFromPoint(centerOfBookRelativeToViewport.x, centerOfBookRelativeToViewport.y)]\n    .find(el => el.className.includes('tikkun-page'))\n\n  if (!pageAtCenter) return\n\n  renderTitle({ title: pageAtCenter.getAttribute('data-page-title') })\n}\n\nlet lastCalled = Date.now()\nconst throttle = f => {\n  if (Date.now() - lastCalled > 300) {\n    lastCalled = Date.now()\n    f()\n  }\n}\n\nconst renderPage = ({ insertStrategy: insert }) => ({ content, title }) => {\n  const node = makePageNode({ title })\n\n  insert(document.querySelector('[data-target-id=\"tikkun-book\"]'), node)\n\n  const el = htmlToElement(Page(content))\n\n  const firstChild = node.firstChild\n  if (firstChild) {\n    node.replaceChild(el, firstChild)\n  } else {\n    node.appendChild(el)\n  }\n\n  renderTitle({ title })\n\n  return node\n}\n\nconst renderPrevious = renderPage({ insertStrategy: insertBefore })\nconst renderNext = renderPage({ insertStrategy: insertAfter })\n\nconst fetchPage = ({ path, title }) => window.fetch(path)\n  .then((res) => res.json())\n  .then((page) => ({ content: page, title }))\n  .catch((err) => {\n    console.error(err)\n  })\n\nconst Scroll = {\n  new: ({ scroll, makePath, makeTitle, startingAtRef = { b: 1, c: 1, v: 1 } }) => {\n    const { pageNumber, lineNumber } = physicalLocationFromRef({ ref: startingAtRef, scroll })\n\n    const iterator = IntegerIterator.new({ startingAt: pageNumber })\n\n    return {\n      fetchPrevious: () => {\n        const n = iterator.previous()\n        if (n <= 0) return Promise.resolve()\n        return fetchPage({ path: makePath(n), title: makeTitle(n) })\n      },\n      fetchNext: () => {\n        const n = iterator.next()\n        return fetchPage({ path: makePath(n), title: makeTitle(n) })\n      },\n      startingLineNumber: lineNumber\n    }\n  }\n}\n\nconst TorahScroll = {\n  new: ({ startingAtRef }) => {\n    return Scroll.new({\n      scroll: 'torah',\n      makePath: n => `/build/pages/${n}.json`,\n      makeTitle: n => getTitle(pageTitles[n - 1]),\n      startingAtRef\n    })\n  }\n}\n\nconst EstherScroll = {\n  new: ({ startingAtRef }) => {\n    return Scroll.new({\n      scroll: 'esther',\n      makePath: n => `/build/pages/${n}-esther.json`,\n      makeTitle: n => '\u05D0\u05E1\u05EA\u05E8',\n      startingAtRef\n    })\n  }\n}\n\nconst debounce = (callback, delay) => {\n  let timeout\n  return () => {\n    clearTimeout(timeout)\n    timeout = setTimeout(() => {\n      callback()\n    }, delay)\n  }\n}\n\nconst toggleColorScheme = () => {\n  const body = document.querySelector('body')\n\n  body.dataset.theme = body.dataset.theme === 'dark' ? 'light' : 'dark'\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const book = document.querySelector('[data-target-id=\"tikkun-book\"]')\n  const toggle = document.querySelector('[data-target-id=\"annotations-toggle\"]')\n\n  InfiniteScroller\n    .new({\n      container: book,\n      fetchPreviousContent: { fetch: () => scroll.fetchPrevious(), render: renderPrevious },\n      fetchNextContent: { fetch: () => scroll.fetchNext(), render: renderNext }\n    })\n    .attach()\n\n  book.addEventListener('scroll', () => {\n    throttle(() => updatePageTitle())\n  })\n\n  book.addEventListener('scroll', debounce(() => {\n    rememberLastScrolledPosition()\n  }, 1000))\n\n  book.addEventListener('dblclick', toggleColorScheme)\n\n  window.addEventListener('resize', () => {\n    resumeLastScrollPosition()\n  })\n\n  toggle.addEventListener('change', (e) => toggleAnnotations(() => !e.target.checked))\n\n  document.addEventListener('keydown', whenKey('Shift', () => toggleAnnotations(() => toggle.checked)))\n  document.addEventListener('keyup', whenKey('Shift', () => toggleAnnotations(() => toggle.checked)))\n\n  document.querySelector('[data-target-id=\"parsha-title\"]').addEventListener('click', toggleParshaPicker)\n  document.addEventListener('keydown', whenKey('/', toggleParshaPicker))\n\n  app.jumpTo({ ref: { b: 1, c: 1, v: 1 }, scroll: 'torah' })\n    .then(hideParshaPicker)\n})\n", "/* global gtag */\n\nimport EventEmitter from './src/event-emitter'\nimport { InfiniteScroller, IntegerIterator, title as getTitle, physicalLocationFromRef } from './src'\nimport Page from './components/Page'\nimport ParshaPicker, { search } from './components/ParshaPicker'\nimport Search from './components/Search'\nimport utils from './components/utils'\nimport pageTitles from './build/page-titles.json'\n\nconst { htmlToElement, whenKey, purgeNode } = utils\n\nconst insertBefore = (parent, child) => {\n  parent.insertAdjacentElement('afterbegin', child)\n}\n\nconst insertAfter = (parent, child) => {\n  parent.insertAdjacentElement('beforeend', child)\n}\n\nlet isShowingParshaPicker = false\n\nlet scroll\n\nconst renderTitle = ({ title }) => {\n  document.querySelector('[data-target-id=\"parsha-title\"]').innerHTML = title\n}\n\nconst makePageNode = ({ title }) => {\n  const node = document.createElement('div')\n  node.classList.add('tikkun-page')\n  node.setAttribute('data-page-title', title)\n\n  return node\n}\n\nconst scrollToLine = ({ node, lineIndex }) => {\n  const lines = [...node.querySelectorAll('.line')]\n\n  const line = lines[lineIndex]\n\n  const book = document.querySelector('.tikkun-book')\n\n  book.scrollTop = line.offsetTop + (line.offsetHeight / 2) - (book.offsetHeight / 2)\n}\n\nconst app = {\n  jumpTo: ({ ref, scroll: _scroll }) => {\n    scroll = (_scroll === 'esther' ? EstherScroll : TorahScroll).new({ startingAtRef: ref })\n\n    purgeNode(document.querySelector('[data-target-id=\"tikkun-book\"]'))\n\n    scroll.fetchNext()\n      .then(renderNext)\n      .then((pageNode) => {\n        scrollToLine({ node: pageNode, lineIndex: scroll.startingLineNumber - 1 })\n      })\n\n    hideParshaPicker()\n\n    return Promise.resolve()\n  }\n}\n\nconst refOf = element => {\n  const refPart = (part) => Number(element.getAttribute(`data-jump-to-${part}`))\n\n  return { b: refPart('book'), c: refPart('chapter'), v: refPart('verse') }\n}\n\nconst setVisibility = ({ selector, visible }) => {\n  const classList = document.querySelector(selector).classList\n\n  classList[visible ? 'remove' : 'add']('u-hidden')\n  classList[visible ? 'remove' : 'add']('mod-animated')\n}\n\nconst showParshaPicker = () => {\n  ;[\n    { selector: '[data-test-id=\"annotations-toggle\"]', visible: false },\n    { selector: '[data-target-id=\"repo-link\"]', visible: false },\n    { selector: '[data-target-id=\"tikkun-book\"]', visible: false }\n  ]\n    .forEach(({ selector, visible }) => setVisibility({ selector, visible }))\n\n  const searchEmitter = EventEmitter.new()\n\n  const s = Search({ search, emitter: searchEmitter })\n  const jumper = ParshaPicker(s, searchEmitter, ({ ref, scroll }) => app.jumpTo({ ref: refOf(ref), scroll }))\n  document.querySelector('#js-app').appendChild(jumper)\n  gtag('event', 'view', {\n    event_category: 'navigation'\n  })\n\n  setTimeout(() => s.focus(), 0)\n}\n\nconst hideParshaPicker = () => {\n  ;[\n    { selector: '[data-test-id=\"annotations-toggle\"]', visible: true },\n    { selector: '[data-target-id=\"repo-link\"]', visible: true },\n    { selector: '[data-target-id=\"tikkun-book\"]', visible: true }\n  ]\n    .forEach(({ selector, visible }) => setVisibility({ selector, visible }))\n\n  document.querySelector('.parsha-picker') && document.querySelector('#js-app').removeChild(document.querySelector('.parsha-picker'))\n}\n\nconst toggleParshaPicker = () => {\n  const isShowingParshaPicker = Boolean(document.querySelector('.parsha-picker'))\n\n  if (isShowingParshaPicker) {\n    hideParshaPicker()\n  } else {\n    showParshaPicker()\n  }\n}\n\nconst toggleAnnotations = (getPreviousCheckedState) => {\n  const toggle = document.querySelector('[data-target-id=\"annotations-toggle\"]')\n\n  toggle.checked = !getPreviousCheckedState()\n\n  const book = document.querySelector('[data-target-id=tikkun-book]')\n\n  book.classList.toggle('mod-annotations-on', toggle.checked)\n  book.classList.toggle('mod-annotations-off', !toggle.checked)\n}\n\nconst scrollState = {\n  lastScrolledPosition: 0,\n  pageAtTop: null\n}\n\nconst resumeLastScrollPosition = () => {\n  if (!scrollState.pageAtTop) return\n  const book = document.querySelector('.tikkun-book')\n  const pageRect = scrollState.pageAtTop.getBoundingClientRect()\n\n  book.scrollTop = scrollState.pageAtTop.offsetTop + (scrollState.lastScrolledPosition * pageRect.height)\n}\n\nconst rememberLastScrolledPosition = () => {\n  const book = document.querySelector('.tikkun-book')\n  const bookBoundingRect = book.getBoundingClientRect()\n\n  const topOfBookRelativeToViewport = {\n    x: bookBoundingRect.left + (bookBoundingRect.width / 2),\n    y: bookBoundingRect.top\n  }\n\n  const pageAtTop = [...document.elementsFromPoint(topOfBookRelativeToViewport.x, topOfBookRelativeToViewport.y)]\n    .find(el => el.className.includes('tikkun-page'))\n\n  if (!pageAtTop) return\n\n  scrollState.pageAtTop = pageAtTop\n  scrollState.lastScrolledPosition = (book.scrollTop - pageAtTop.offsetTop) / pageAtTop.clientHeight\n}\n\nconst updatePageTitle = () => {\n  const bookBoundingRect = document.querySelector('.tikkun-book').getBoundingClientRect()\n\n  const centerOfBookRelativeToViewport = {\n    x: bookBoundingRect.left + (bookBoundingRect.width / 2),\n    y: bookBoundingRect.top + (bookBoundingRect.height / 2)\n  }\n\n  const pageAtCenter = [...document.elementsFromPoint(centerOfBookRelativeToViewport.x, centerOfBookRelativeToViewport.y)]\n    .find(el => el.className.includes('tikkun-page'))\n\n  if (!pageAtCenter) return\n\n  renderTitle({ title: pageAtCenter.getAttribute('data-page-title') })\n}\n\nlet lastCalled = Date.now()\nconst throttle = f => {\n  if (Date.now() - lastCalled > 300) {\n    lastCalled = Date.now()\n    f()\n  }\n}\n\nconst renderPage = ({ insertStrategy: insert }) => ({ content, title }) => {\n  const node = makePageNode({ title })\n\n  insert(document.querySelector('[data-target-id=\"tikkun-book\"]'), node)\n\n  const el = htmlToElement(Page(content))\n\n  const firstChild = node.firstChild\n  if (firstChild) {\n    node.replaceChild(el, firstChild)\n  } else {\n    node.appendChild(el)\n  }\n\n  renderTitle({ title })\n\n  return node\n}\n\nconst renderPrevious = renderPage({ insertStrategy: insertBefore })\nconst renderNext = renderPage({ insertStrategy: insertAfter })\n\nconst fetchPage = ({ path, title }) => window.fetch(path)\n  .then((res) => res.json())\n  .then((page) => ({ content: page, title }))\n  .catch((err) => {\n    console.error(err)\n  })\n\nconst Scroll = {\n  new: ({ scroll, makePath, makeTitle, startingAtRef = { b: 1, c: 1, v: 1 } }) => {\n    const { pageNumber, lineNumber } = physicalLocationFromRef({ ref: startingAtRef, scroll })\n\n    const iterator = IntegerIterator.new({ startingAt: pageNumber })\n\n    return {\n      fetchPrevious: () => {\n        const n = iterator.previous()\n        if (n <= 0) return Promise.resolve()\n        return fetchPage({ path: makePath(n), title: makeTitle(n) })\n      },\n      fetchNext: () => {\n        const n = iterator.next()\n        return fetchPage({ path: makePath(n), title: makeTitle(n) })\n      },\n      startingLineNumber: lineNumber\n    }\n  }\n}\n\nconst TorahScroll = {\n  new: ({ startingAtRef }) => {\n    return Scroll.new({\n      scroll: 'torah',\n      makePath: n => `/build/pages/${n}.json`,\n      makeTitle: n => getTitle(pageTitles[n - 1]),\n      startingAtRef\n    })\n  }\n}\n\nconst EstherScroll = {\n  new: ({ startingAtRef }) => {\n    return Scroll.new({\n      scroll: 'esther',\n      makePath: n => `/build/pages/${n}-esther.json`,\n      makeTitle: n => '\u05D0\u05E1\u05EA\u05E8',\n      startingAtRef\n    })\n  }\n}\n\nconst debounce = (callback, delay) => {\n  let timeout\n  return () => {\n    clearTimeout(timeout)\n    timeout = setTimeout(() => {\n      callback()\n    }, delay)\n  }\n}\n\nconst toggleColorScheme = () => {\n  const body = document.querySelector('body')\n\n  body.dataset.theme = body.dataset.theme === 'dark' ? 'light' : 'dark'\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const book = document.querySelector('[data-target-id=\"tikkun-book\"]')\n  const toggle = document.querySelector('[data-target-id=\"annotations-toggle\"]')\n\n  InfiniteScroller\n    .new({\n      container: book,\n      fetchPreviousContent: { fetch: () => scroll.fetchPrevious(), render: renderPrevious },\n      fetchNextContent: { fetch: () => scroll.fetchNext(), render: renderNext }\n    })\n    .attach()\n\n  book.addEventListener('scroll', () => {\n    throttle(() => updatePageTitle())\n  })\n\n  book.addEventListener('scroll', debounce(() => {\n    rememberLastScrolledPosition()\n  }, 1000))\n\n  book.addEventListener('dblclick', toggleColorScheme)\n\n  window.addEventListener('resize', () => {\n    resumeLastScrollPosition()\n  })\n\n  toggle.addEventListener('change', (e) => toggleAnnotations(() => !e.target.checked))\n\n  document.addEventListener('keydown', whenKey('Shift', () => toggleAnnotations(() => toggle.checked)))\n  document.addEventListener('keyup', whenKey('Shift', () => toggleAnnotations(() => toggle.checked)))\n\n  document.querySelector('[data-target-id=\"parsha-title\"]').addEventListener('click', toggleParshaPicker)\n  document.addEventListener('keydown', whenKey('/', toggleParshaPicker))\n\n  app.jumpTo({ ref: { b: 1, c: 1, v: 1 }, scroll: 'torah' })\n    .then(hideParshaPicker)\n})\n"],
  "mappings": "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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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",
  "names": []
}
